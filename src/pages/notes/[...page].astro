---
import type { GetStaticPaths } from "astro";

import PageNav from "@/components/PageNav.astro";
import Layout from "@/layouts/Layout.astro";
import { formatDate } from "@/utilities/dates";

// Generate static pages
export const getStaticPaths = (async ({ paginate }) => {
	const data = await fetch("https://cms.theadhocracy.co.uk/notes.json", {
		method: "GET",
		headers: {
			"content-type": "application/json",
			Authorization: `Bearer ${import.meta.env.CRAFT_API_KEY}`,
		},
	});
	const response = await data.json();

	return paginate(response.data, { pageSize: 12 });
}) satisfies GetStaticPaths;

// Handle props
const { page } = Astro.props;
---

<Layout title="Notes">
	<main id="content">
		<header>
			<h1>Explore My Notes</h1>
		</header>
		<section>
			{
				page.data.map((note: any) => (
					<article class="note">
						<header>
							<h2>
								<a href={note.source}>{note.title}</a>
								{note.attribution ? (
									<>
										{" "}
										| <span class={"attributed_to"}>{note.attribution}</span>
									</>
								) : (
									""
								)}
							</h2>
						</header>
						<section class="article" set:html={note.body} />
						<footer>
							<p>
								<span
									role="img"
									title="Date published"
									aria-label="Date published"
								>
									📆
								</span>{" "}
								{formatDate(note.date)} &nbsp;|&nbsp;
								<a href={`/note/${note.slug}`}>
									<span
										role="img"
										title="Permalink to note"
										aria-label="Link icon"
									>
										🔗
									</span>
								</a>
							</p>
							<ul class="flat-list">
								{note.categories.map((category: any) => (
									<a href={`/search/?query=&filter=${category}`}>
										<li>
											<strong>{category},&nbsp;</strong>
										</li>
									</a>
								))}
								{note.tags.map((tag: string, index: number, array: any) =>
									index < array.length - 1 ? (
										<li>{tag},&nbsp;</li>
									) : (
										<li>{tag}&nbsp;</li>
									)
								)}
							</ul>
						</footer>
					</article>
				))
			}
			<PageNav
				currentPage={page.currentPage}
				totalPages={page.lastPage}
				pageRoot="/notes"
				type="regular"
			/>
		</section>
	</main>
</Layout>

<style is:global>
	/* Determin Grid Widths */
	:root {
		--main: 40rem;
		--aside: 20rem;
		--gutter: 10rem;
		--full-width: calc(var(--main) + (2 * var(--aside)) + (2 * var(--gutter)));
		--part-span: calc(var(--main) + var(--aside));
	}

	/* Width / Column Utility Classes */

	.full-width {
		max-width: var(--full-width);
		width: 100%;
	}

	.main-col {
		max-width: var(--main);
		width: 100%;
	}

	.right-side {
		float: right;
		max-width: var(--aside);
		width: 100%;
	}

	.left-side {
		float: left;
		max-width: var(--aside);
		width: 100%;
	}

	.part-span {
		max-width: var(--part-span);
		width: 100%;
	}

	/* Article Styles */

	.article p,
	.article h2,
	.article h3,
	.article h4,
	.article h5,
	.article h6,
	#article-body ul,
	#article-body ol,
	.footnotes ul,
	.footnotes ol {
		max-width: var(--main);
		line-height: 2;
	}

	.article h2 {
		background: linear-gradient(90deg, var(--blue), var(--lightblue));
		-webkit-text-fill-color: transparent;
		-webkit-background-clip: text;
		background-clip: text;
		color: var(--blue); /* fallback if gradients aren't suppported */
	}

	.article h3 {
		background: linear-gradient(90deg, var(--green), var(--lightblue));
		-webkit-text-fill-color: transparent;
		-webkit-background-clip: text;
		background-clip: text;
		color: var(--green); /* fallback if gradients aren't suppported */
	}

	.article code {
		padding: 0 0.2em;
		font-size: 1.05em;
		color: var(--orange);
		font-weight: bold;
	}

	.article pre {
		max-width: var(--part-span);
		padding: 1rem 3rem;
		overflow-x: auto;
		background-color: var(--darkgrey);
		border-left: 5px solid var(--orange);
		border-image: linear-gradient(180deg, var(--orange), var(--yellow)) 1;
		color: var(--yellow);
		line-height: 2.2;
		tab-size: 4;
		white-space: pre;
	}

	.article kbd {
		padding: 0.1em 0.3em 0;
		border: 1px solid var(--grey);
		border-radius: 6px;
		color: var(--green);
	}

	.article blockquote {
		position: relative;
		max-width: var(--part-span);
		padding: 2rem;
		font-size: 1.5rem;
		font-family: "Times New Roman", serif;
		line-height: 2;
		text-align: center;
		font-style: italic;
		quotes: "“" "”";
	}

	.article blockquote::before {
		content: open-quote;
		display: inline-block;
		transform: translateY(0.25rem);
		margin-right: 1.25rem;
		margin-left: -3rem; /* allows position to spill into gap for article details */
		font-size: 4rem;
		color: var(--orange);
		line-height: 0;
	}

	.article blockquote::after {
		content: close-quote;
		position: absolute;
		bottom: -2rem;
		right: 0;
		margin-left: 1.25rem;
		font-size: 4rem;
		color: var(--lightblue);
	}

	.article figure {
		display: flex;
		flex-wrap: wrap;
		align-items: flex-end;
		justify-content: center;
	}

	.article figure img {
		margin: 0 0 0 auto;
	}

	.article figure figcaption {
		max-width: 20rem;
		margin: 2rem auto 0 2rem;
		padding-left: 1rem;
		padding-bottom: 0.25rem;
		border-left: 3px solid var(--lightblue);
		font-size: 0.8rem;
		color: var(--lightblue);
	}

	.article del,
	.article del code {
		color: var(--grey);
	}

	.article a {
		color: var(--pink);
		text-underline-offset: 0.1em;
		text-decoration-thickness: 0.1em;
	}

	.article a:visited {
		color: var(--green);
	}

	.article a:not(.footnote-return):hover {
		font-style: italic;
		letter-spacing: 0.01em;
	}

	.article sup {
		scroll-margin-top: 3rem;
	}

	.article sup a:not(.footnote-return):hover {
		font-style: normal;
		color: var(--orange);
	}

	/* Note Styles */

	.note > header h2 {
		color: var(--lightblue);
	}

	.note > header h2 a {
		color: var(--blue);
	}

	.note > section.article pre {
		border-left-color: var(--lightblue);
		border-image: linear-gradient(180deg, var(--lightblue), var(--blue)) 1;
		color: var(--lightblue);
		background-color: vaR(--lightgrey);
	}

	.note > section.article code {
		color: var(--lightblue);
	}

	.note > footer {
		padding-bottom: 0.99rem;
		text-align: right;
	}

	.note > footer ul,
	.note > footer p,
	.note > footer span,
	.note > footer a {
		font-size: 0.8rem;
	}

	.note > footer a,
	.note > footer li {
		text-decoration: none;
		color: var(--darkgrey);
	}

	.note > footer ul a:hover {
		font-style: italic;
	}

	.note > footer ul {
		justify-content: flex-end;
	}

	.note > footer li {
		margin: 0;
	}

	/* Desktop */

	@media screen and (min-width: 599px) {
		.note {
			display: grid;
			grid-template-columns: 65% 1fr;
			grid-template-columns: minmax(50%, 65%) minmax(150px, 1fr);
			grid-column-gap: 5%;
			/* grid-column-gap: 5rem; */
		}

		.note > header h2 {
			margin-bottom: 1rem;
		}

		.note > article {
			grid-column: 1;
		}

		.note > section > *:first-child {
			margin-top: 0;
		}

		.note > footer {
			grid-column: 2;
			grid-row: 1 / 3;
			align-self: end;
			padding-bottom: 0.99rem;
			text-align: right;
		}

		.note + .page-navigation {
			margin-top: 2.5rem;
		}
	}

	@media screen and (min-width: 1550px) {
		.note {
			grid-column-gap: 5rem;
		}
	}
</style>
